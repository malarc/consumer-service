

server:
  port: 8081

spring:
  main:
    banner-mode: CONSOLE
  banner:
    location: banner.txt
  application:
    name: Consumer
  kafka:
    listener:
      concurrency: 1
      ack-mode: MANUAL_IMMEDIATE
      auto:
        create:
          topics:
            enable: true
      bootstrap-servers: pkc-6ojv2.us-west4.gcp.confluent.cloud:9092
    consumer:
      topic: apmm.locationref.topic.internal.any.v1
      concurrency: 1
      sessionTimeout: 30000
      max-poll-records: 10
      max-poll-timeout: 5000
      heart-beat-interval-ms: 3000
      max-fetch-size-bytes: 2097164

consumer-kafka-config:
  bootstrap-servers: pkc-6ojv2.us-west4.gcp.confluent.cloud:9092
  username: YGZWSL4IE7B7EUKG
  password: yXBPPcK4ZIHRII0ybeGpFaXsLDJn8HBFHLnvgkJC8SApSQ46mhyR/NnOmbzVu0WF
  clientId: locationData
  topic: apmm.locationref.topic.internal.any.v1

logging.level.org.apache.kafka: INFO
logging.level.io.confluent.kafka: INFO

spring.kafka.consumer.group-id: lkc-0djrwp
spring.kafka.consumer.auto-offset-reset: earliest
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer:  org.apache.kafka.common.serialization.StringDeserializer
